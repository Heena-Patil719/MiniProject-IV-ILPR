# Generated by Django 5.1.5 on 2025-04-20 17:40

import django.db.models.deletion
import project_repo.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('mentor', models.CharField(default='No Mentor', max_length=255)),
                ('id_card_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=15, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('mobile', models.CharField(max_length=15)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('branch', models.CharField(max_length=100)),
                ('institute', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=128)),
                ('reset_token', models.CharField(blank=True, max_length=100, null=True)),
                ('reset_token_expires', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('branch', models.CharField(max_length=100)),
                ('teacher_id', models.CharField(max_length=50, unique=True)),
                ('institute', models.CharField(max_length=255)),
                ('id_card', models.FileField(blank=True, null=True, upload_to='id_cards/', validators=[project_repo.models.validate_file_type, project_repo.models.validate_id_card_size])),
                ('reset_token', models.CharField(blank=True, max_length=100, null=True)),
                ('reset_token_expires', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Idea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college_name', models.CharField(default='SIES Graduate School of Technology', max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('academic_year', models.CharField(default=project_repo.models.get_current_academic_year, max_length=10)),
                ('branch', models.CharField(max_length=100)),
                ('domain', models.CharField(max_length=50)),
                ('innovation_type', models.CharField(max_length=255)),
                ('status_level', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3')])),
                ('problem', models.TextField()),
                ('solution', models.TextField()),
                ('features', models.TextField()),
                ('difference', models.TextField()),
                ('video_url', models.URLField(blank=True, null=True)),
                ('team_size', models.PositiveIntegerField()),
                ('phone_number', models.CharField(max_length=15)),
                ('idea_description', models.TextField()),
                ('project_stage', models.CharField(max_length=100)),
                ('upload', models.FileField(blank=True, null=True, upload_to='documents/', validators=[project_repo.models.validate_file_type, project_repo.models.validate_pdf_size])),
                ('mentor', models.CharField(max_length=255)),
                ('develop_as_part', models.CharField(choices=[('academic_requirement', 'Academic Requirement/Study Project'), ('academic_research', 'Academic Research Assignment/Industry Sponsored Project'), ('independent_assignment', 'Independent Assignment/Non-academic Study Project')], default='academic_requirement', max_length=255)),
                ('team_leader_name', models.CharField(max_length=100)),
                ('team_leader_email', models.EmailField(max_length=254)),
                ('team_leader_id_card', models.FileField(blank=True, null=True, upload_to='team_leader_id_cards/', validators=[project_repo.models.validate_file_type, project_repo.models.validate_id_card_size])),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('feedback', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_repo.project')),
            ],
        ),
        migrations.CreateModel(
            name='Prototype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prototype_title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('college_name', models.CharField(default='SIES Graduate School of Technology', max_length=255)),
                ('academic_year', models.CharField(default='2025-2026', max_length=10)),
                ('branch', models.CharField(max_length=100)),
                ('domain', models.CharField(max_length=50)),
                ('innovation_type', models.CharField(max_length=255)),
                ('problem', models.TextField()),
                ('solution', models.TextField()),
                ('features', models.TextField()),
                ('difference', models.TextField()),
                ('video_url', models.URLField(blank=True, null=True)),
                ('team_size', models.PositiveIntegerField()),
                ('status_level', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3')], default=1)),
                ('prototype_files', models.FileField(blank=True, null=True, upload_to='prototype_files/')),
                ('team_count', models.PositiveIntegerField(default=1)),
                ('upload', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('mentor', models.CharField(max_length=255)),
                ('develop_as_part', models.CharField(choices=[('academic_requirement', 'Academic Requirement/Study Project'), ('academic_research', 'Academic Research Assignment/Industry Sponsored Project'), ('independent_assignment', 'Independent Assignment/Non-academic Study Project')], default='academic_requirement', max_length=255)),
                ('team_leader_name', models.CharField(max_length=100)),
                ('team_leader_email', models.EmailField(max_length=254)),
                ('team_leader_id_card', models.FileField(blank=True, null=True, upload_to='team_leader_id_cards/')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrototypeTeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prototype_title', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('id_card', models.FileField(blank=True, null=True, upload_to='team_member_id_cards/')),
                ('team_leader_name', models.CharField(blank=True, max_length=255, null=True)),
                ('prototype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prototype_team_members', to='project_repo.prototype')),
            ],
        ),
        migrations.CreateModel(
            name='Startup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startup_name', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=20)),
                ('website', models.URLField(blank=True, null=True)),
                ('registration', models.TextField()),
                ('key_innovation', models.TextField()),
                ('incubation_year', models.IntegerField()),
                ('innovation_development', models.TextField()),
                ('sector', models.TextField()),
                ('innovation_type', models.CharField(choices=[('product', 'Product'), ('service', 'Service'), ('process', 'Process')], max_length=20)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('innovation_image', models.FileField(blank=True, null=True, upload_to='startup_files/')),
                ('mentor', models.CharField(max_length=255)),
                ('team_leader_name', models.CharField(max_length=255)),
                ('team_leader_email', models.EmailField(max_length=254)),
                ('team_leader_id_card', models.FileField(blank=True, null=True, upload_to='startup_files/')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StartupTeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('id_card', models.FileField(blank=True, null=True, upload_to='startup_files/')),
                ('domain', models.CharField(blank=True, max_length=50, null=True)),
                ('innovation_type', models.CharField(blank=True, max_length=255, null=True)),
                ('problem', models.TextField(blank=True, null=True)),
                ('solution', models.TextField(blank=True, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('difference', models.TextField(blank=True, null=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('team_size', models.PositiveIntegerField(blank=True, null=True)),
                ('status_level', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3')], default=1)),
                ('prototype_files', models.FileField(blank=True, null=True, upload_to='prototype_files/')),
                ('team_count', models.PositiveIntegerField(default=1)),
                ('upload', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('startup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='project_repo.startup')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='student',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='project_repo.student'),
        ),
        migrations.AddField(
            model_name='project',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_repo.teacher'),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('id_card', models.FileField(upload_to='team_member_id_cards/', validators=[project_repo.models.validate_file_type])),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='project_repo.idea')),
            ],
        ),
    ]
